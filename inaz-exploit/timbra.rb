# Comment the following line /etc/ssl/openssl.cnf in order to ingnore the "dh key too small" error

require 'net/http'
require 'uri'
require 'openssl'
require 'nokogiri'    

time = Time.new
puts("[+] Strarting procedure at "+time.inspect)

uri = URI.parse("https://serviziweb.inaz.it/HEPortaleKALEYRA/PageFun/CheckPwd.aspx")
request = Net::HTTP::Post.new(uri)
request.content_type = "application/x-www-form-urlencoded"
request["Host"] = "serviziweb.inaz.it"
request["User-Agent"] = "Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0"
request["Accept"] = "*/*"
request["Accept-Language"] = "en-US,en;q=0.5"
request["Referer"] = "https://serviziweb.inaz.it/HEPortaleKALEYRA/PageFun/Login.aspx"
request["Content-Length"] = "142"
request.set_form_data(
  "IdCaptcha" => "",
  "IdLogin" => ARGV[0],
  "IdPwd" => ARGV[1],
  "ServerLDAP" => "",
  "SuHrWeb" => "30",
  "TipoAuthCode" => "-----",
)

req_options = {
  use_ssl: uri.scheme == "https",
  verify_mode: OpenSSL::SSL::VERIFY_NONE,
}

response = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(request)
end

puts response.body


uri = URI.parse("https://serviziweb.inaz.it/HEPortaleKALEYRA/default.aspx")
request = Net::HTTP::Post.new(uri)
request.content_type = "application/x-www-form-urlencoded"
request["Host"] = "serviziweb.inaz.it"
request["User-Agent"] = "Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0"
request["Accept"] = "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
request["Accept-Language"] = "en-US,en;q=0.5"
request["Referer"] = "https://serviziweb.inaz.it/HEPortaleKALEYRA/PageFun/Login.aspx"
request["Content-Length"] = "141"
request.set_form_data(
  "IdAuthCode" => "",
  "IdCaptcha" => "",
  "IdFrom" => "LOGIN",
  "IdLogin" => "{24464d57783a52526b6b707d7c2f6b6555}",
  "IdPwdCript" => "[0(?DaUlL;jj;]",
  "TipoAuthCode" => "-----",
)

req_options = {
  use_ssl: uri.scheme == "https",
  verify_mode: OpenSSL::SSL::VERIFY_NONE,
}

response = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(request)
end

if (response.code == '200') then
	puts("[+] Succesfully logged in in inaz system")
end
cookie = response['set-cookie'].split('; ')
cookiestr= cookie[0] + cookie[2].sub('HttpOnly,' , ';')
puts("[+] setting auth cookie to: " + cookie[0].split('=')[1])



uri = URI.parse("https://serviziweb.inaz.it/HEPortaleKALEYRA/MenuAppIcs/MenuTop.aspx")
request = Net::HTTP::Get.new(uri)
request["Host"] = "serviziweb.inaz.it"
request["User-Agent"] = "Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0"
request["Accept"] = "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
request["Accept-Language"] = "en-US,en;q=0.5"
request["Referer"] = "https://serviziweb.inaz.it/HEPortaleKALEYRA/default.aspx"
request["Cookie"] = cookiestr
request["Connection"] = "close"
request["Upgrade-Insecure-Requests"] = "1"

req_options = {
  use_ssl: uri.scheme == "https",
  verify_mode: OpenSSL::SSL::VERIFY_NONE,
}

response = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(request)
end

puts("[*] Scraping AccessCode from document")

parsedDocument = Nokogiri::HTML.parse(response.body)
accessCode = parsedDocument.at('#AccessCode2')['value']

puts("[+] Obtained access code: " + accessCode)

uri = URI.parse("https://serviziweb.inaz.it/HEPortaleKALEYRA/FunPresenze/TermVirtuale.aspx")
request = Net::HTTP::Post.new(uri)
request.content_type = "application/x-www-form-urlencoded"
request["Host"] = "serviziweb.inaz.it"
request["User-Agent"] = "Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0"
request["Accept"] = "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
request["Accept-Language"] = "en-US,en;q=0.5"
request["Referer"] = "https://serviziweb.inaz.it/HEPortaleKALEYRA/HomeCliente/Home.aspx"
request["Content-Length"] = "270"
request["Cookie"] = cookiestr
request["Connection"] = "close"
request["Upgrade-Insecure-Requests"] = "1"
request.set_form_data(
  "AccessCode" => "127",
  "AccessCode2" => accessCode,
  "CallParam" => "",
  "NomeFile" => "",
  "ParamData" => "",
  "ParamFrame" => "",
  "ParamPage" => "azione=ScriviTimbratura;kintRapp=10005;tipoTimbratura=E;kintAzi=10001;offset=-60;", #edit kintrapp
  "SubMenu" => "",
  "TVkazi" => "10001",
  "VoceMenu" => "",
  "kintTerm" => "0",
  "krapp" => "10005",
)

req_options = {
  use_ssl: uri.scheme == "https",
  verify_mode: OpenSSL::SSL::VERIFY_NONE,
}

response = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|
  http.request(request)
end

index = response.body.index('ENTRATA')
puts("[+] Seeking for response : " + response.body[index..index+28])
